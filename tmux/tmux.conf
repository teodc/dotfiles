# ------------------------------------------------------------------------------
# General
# ------------------------------------------------------------------------------

# Set default shell
set -g default-shell $SHELL

# Set terminal colors
set -g default-terminal "${TERM}"
set-option -ga terminal-overrides ",xterm*:Tc"

# Enable mouse
set -g mouse on

# Longer history
set -g history-limit 5000

# Start window and pane numbering from 1
set -g base-index 1
set -g pane-base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
#set -g allow-rename on

# Allow tmux to set the terminal title
#set -g set-titles on

# Re-number windows when creating/closing new ones
set -g renumber-windows on

# Use vim key bindings in status line
set-option -g status-keys vi

# Use vim key bindings in copy mode
setw -g mode-keys vi

# Fix ESC delay in vim
set -g escape-time 10

# Don't show distracting notifications
#set -g visual-bell off
#set -g visual-activity off

# ------------------------------------------------------------------------------
# Key bindings
# ------------------------------------------------------------------------------

# Change prefix
unbind C-a
set -g prefix C-a
bind C-a send-prefix

# Reload tmux.conf on prefix r
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Config reloaded!"

# Toggle status bar
bind t set-option status

# Cycle layout
bind b next-layout

# Remember current path when creating new windows
#bind c new-window -c '#{pane_current_path}'

# Swap the current window with the one on its right or left
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# Split panes and remember current path
bind - split-window -v -c '#{pane_current_path}'
bind = split-window -h -c '#{pane_current_path}'

# Switch between panes
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Break pane into new window and keep focus on the current window
#bind ! break-pane -d

# Copy-mode
#unbind -T copy-mode-vi v
#bind -T copy-mode-vi v send-keys -X begin-selection
#bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
#bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
#bind -T copy-mode-vi Escape send-keys -X cancel

# Smart pane switching with awareness of Vim splits
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\'" "select-pane -l"
#bind -T copy-mode-vi C-h select-pane -L
#bind -T copy-mode-vi C-j select-pane -D
#bind -T copy-mode-vi C-k select-pane -U
#bind -T copy-mode-vi C-l select-pane -R
#bind -T copy-mode-vi 'C-\' select-pane -l

# ------------------------------------------------------------------------------
# Theme
# ------------------------------------------------------------------------------

set -g @catppuccin_flavour 'mocha'

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules_right "directory application user host session"
set -g @catppuccin_status_modules_left ""
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_application_color "yellow"
set -g @catppuccin_application_icon "󰀵"

#set -g @catppuccin_directory_text "#{pane_current_path}"
set -g @catppuccin_directory_text "#{s|/Users/theo|~|:pane_current_path}"

# ------------------------------------------------------------------------------
# Plugins
# ------------------------------------------------------------------------------

# Plugins to load
set -g @plugin "tmux-plugins/tpm" # https://github.com/tmux-plugins/tpm#key-bindings
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-resurrect" # https://github.com/tmux-plugins/tmux-resurrect#key-bindings
set -g @plugin "catppuccin/tmux"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run $XDG_CONFIG_HOME/tmux/plugins/tpm/tpm

# ------------------------------------------------------------------------------
# Extra after stuff
# ------------------------------------------------------------------------------

# TODO: Arrange the if condition so it prevents breaking the status line after hot config reload
# Add a blank status line on top of the filled one
# if -F '#{!=:#{status},2}' {
#     set -g status 2
#     set -Fg 'status-format[1]' '#{status-format[0]}'
#     set -g 'status-format[0]' ''
# }

# Position of the status bar
set-option -g status-position bottom
set-option -g status-interval 1
# set -g status 2
# set -Fg 'status-format[1]' '#{status-format[0]}'
# set -g 'status-format[0]' ''

